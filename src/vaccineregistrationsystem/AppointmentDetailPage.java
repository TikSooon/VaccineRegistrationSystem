/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package vaccineregistrationsystem;

import com.toedter.calendar.JTextFieldDateEditor;
import java.awt.Color;
import java.time.LocalTime;
import java.util.Date;
import java.util.HashSet;
import javax.swing.JOptionPane;
import javax.swing.UIManager;
import vaccineregistrationsystem.VaccineRegistrationSystem.AccessMode;

/**
 *
 * @author DELL
 */
public class AppointmentDetailPage extends javax.swing.JFrame {

    /**
     * Creates new form AppointmentDetailPage
     */
    private Appointment app = new Appointment();
    private AccessMode mode;
    private int appointmentID;
        
    public AppointmentDetailPage(AccessMode mode, int appointmentID) {
        initComponents();
        this.setVisible(true);
        
        this.mode = mode;
        this.appointmentID = appointmentID;
        
        if(mode != AccessMode.NEW){
            displayData();
        }else{
            app = new Appointment();
            app.setStatus("Pending");
            btnComplete.setVisible(false);
        }
        
        if(mode == AccessMode.VIEW){
            enterViewMode();
            
        }
      
    }
    
    
    private void displayData(){
        app = Appointment.searchbyAppointmentID(appointmentID);
        
        setPeopleID(app.getPeopleID());
        setVaccine(app.getVaccineID());
        
        Centre centre = Centre.searchByID(app.getCentreID());
        cboCentre.setSelectedItem(centre.getCentreName());
        cboTime.setSelectedItem(app.getTime());
        dateAppointmentDate.setDate(app.getDate());
        
        String status = app.getStatus();
        lblStatus.setText(status);
        
        if(app.getPersonnelID() != 0){
            int personnelId = app.getPersonnelID();
            String personnelName = Personnel.getPersonnelbyID(personnelId).getName();
            lblPersonnel.setText(personnelName);
        }
        
        if(status.equals("Completed")){
            VaccinationRecord vacRecord = app.getVacRecord();
            lblInjTime.setText(UIUtils.formatTime(vacRecord.getInjectionTime()));

        }
        
        if(!status.equals("Pending")){
            
        }
    }
    
    private void enterViewMode(){
        cboCentre.setEnabled(false);
        cboTime.setEnabled(false);
        dateAppointmentDate.setEnabled(false);
        btnSelectPeople.setEnabled(false);
        btnSelectVaccine.setEnabled(false);
        btnRemoveVac.setEnabled(false);
        btnComplete.setEnabled(false);
                
        ((JTextFieldDateEditor)dateAppointmentDate.getDateEditor())
                .setDisabledTextColor(Color.darkGray);
        UIManager.put( "ComboBox.disabledForeground", Color.BLACK );
        
        btnSave.setVisible(false);
        
    }

    public void setPeopleID(int peopleID){
        app.setPeopleID(peopleID);
        People people = People.getPeopleByID(peopleID);
        
        lblName.setText(people.getName());
        lblIC.setText(people.getNric());
        
    }
    
    public void setVaccine(int vaccineID){
        app.setVaccineID(vaccineID);
        Vaccine vaccine = Vaccine.searchVaccine(vaccineID);
        
        lblVacName.setText(vaccine.getVaccineName());
        lblVacExp.setText(UIUtils.formatDate(vaccine.getExpDate()));
   
        
        cboCentre.setEnabled(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblTitle = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        btnSelectPeople = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        lblName = new javax.swing.JLabel();
        lblIC = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        dateAppointmentDate = new com.toedter.calendar.JDateChooser();
        cboTime = new javax.swing.JComboBox<>();
        jLabel6 = new javax.swing.JLabel();
        cboCentre = new javax.swing.JComboBox<>();
        btnCheckOccupants = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        lblCurOccu = new javax.swing.JLabel();
        lblAdvOccu = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        lblVacName = new javax.swing.JLabel();
        lblVacExp = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        btnSelectVaccine = new javax.swing.JButton();
        btnSave = new javax.swing.JButton();
        lblStatus = new javax.swing.JLabel();
        btnRemoveVac = new javax.swing.JButton();
        jLabel10 = new javax.swing.JLabel();
        btnComplete = new javax.swing.JButton();
        lblInjTime = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        lblPersonnel = new javax.swing.JLabel();
        jSeparator2 = new javax.swing.JSeparator();
        jSeparator3 = new javax.swing.JSeparator();
        jSeparator4 = new javax.swing.JSeparator();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Appointment Detail");

        lblTitle.setFont(new java.awt.Font("Segoe UI Black", 0, 18)); // NOI18N
        lblTitle.setText("Appointment Detail");

        jLabel2.setText("People");

        jLabel3.setText("Vaccine");

        jLabel4.setText("Date");

        btnSelectPeople.setBackground(new java.awt.Color(93, 93, 90));
        btnSelectPeople.setForeground(new java.awt.Color(255, 255, 255));
        btnSelectPeople.setText("Select People");
        btnSelectPeople.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSelectPeopleActionPerformed(evt);
            }
        });

        jLabel5.setText("Name:");

        lblName.setText("---");

        lblIC.setText("---");

        jLabel8.setText("IC/Passport No:");

        cboTime.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "10 am", "1 pm", "4 pm" }));

        jLabel6.setText("Centre");

        cboCentre.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "National Stadium Bukit Jalil", "KL General Hospital", "Titiwangsa Stadium" }));

        btnCheckOccupants.setBackground(new java.awt.Color(93, 93, 90));
        btnCheckOccupants.setForeground(new java.awt.Color(255, 255, 255));
        btnCheckOccupants.setText("Check Occupant Status");
        btnCheckOccupants.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCheckOccupantsActionPerformed(evt);
            }
        });

        jLabel7.setText("Current Occupants:");

        jLabel9.setText("Advised Occupants:");

        lblCurOccu.setText("---");

        lblAdvOccu.setText("---");

        jLabel12.setText("Timeslot");

        jLabel13.setText("Name:");

        lblVacName.setText("---");

        lblVacExp.setText("---");

        jLabel14.setText("Expired Date:");

        btnSelectVaccine.setBackground(new java.awt.Color(93, 93, 90));
        btnSelectVaccine.setForeground(new java.awt.Color(255, 255, 255));
        btnSelectVaccine.setText("Select Vaccine");
        btnSelectVaccine.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSelectVaccineActionPerformed(evt);
            }
        });

        btnSave.setBackground(new java.awt.Color(93, 93, 90));
        btnSave.setForeground(new java.awt.Color(255, 255, 255));
        btnSave.setText("Save");
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });

        lblStatus.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        lblStatus.setText("---");

        btnRemoveVac.setBackground(new java.awt.Color(93, 93, 90));
        btnRemoveVac.setForeground(new java.awt.Color(255, 255, 255));
        btnRemoveVac.setText("Remove Selected Vaccine");
        btnRemoveVac.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRemoveVacActionPerformed(evt);
            }
        });

        jLabel10.setText("Status:");

        btnComplete.setBackground(new java.awt.Color(93, 93, 90));
        btnComplete.setForeground(new java.awt.Color(255, 255, 255));
        btnComplete.setText("Complete");
        btnComplete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCompleteActionPerformed(evt);
            }
        });

        lblInjTime.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        lblInjTime.setText("---");

        jLabel11.setText("Time Received Injection:");

        jLabel15.setText("Appointed By:");

        lblPersonnel.setText("---");

        jSeparator2.setForeground(new java.awt.Color(0, 0, 0));

        jSeparator3.setForeground(new java.awt.Color(0, 0, 0));

        jSeparator4.setForeground(new java.awt.Color(0, 0, 0));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel13)
                        .addGap(18, 18, 18)
                        .addComponent(lblVacName)
                        .addGap(148, 148, 148)
                        .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(38, 38, 38)
                        .addComponent(lblVacExp)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel5)
                                        .addGap(18, 18, 18)
                                        .addComponent(lblName))
                                    .addComponent(jLabel4)
                                    .addComponent(cboTime, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel12)
                                    .addComponent(dateAppointmentDate, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 222, Short.MAX_VALUE))
                                .addGap(93, 93, 93)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel6)
                                            .addComponent(jLabel9)
                                            .addComponent(jLabel7))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(lblCurOccu)
                                            .addComponent(lblAdvOccu))
                                        .addGap(175, 175, 175))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(btnCheckOccupants)
                                            .addComponent(cboCentre, javax.swing.GroupLayout.PREFERRED_SIZE, 291, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(0, 0, Short.MAX_VALUE))))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                        .addComponent(jLabel15)
                                        .addGap(18, 18, 18)
                                        .addComponent(lblPersonnel))
                                    .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                        .addComponent(btnSelectVaccine)
                                        .addGap(18, 18, 18)
                                        .addComponent(btnRemoveVac)))
                                .addGap(0, 331, Short.MAX_VALUE)))
                        .addGap(73, 73, 73))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(btnSave)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jSeparator4, javax.swing.GroupLayout.PREFERRED_SIZE, 606, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, 606, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jLabel10)
                                    .addGap(18, 18, 18)
                                    .addComponent(lblStatus)
                                    .addGap(147, 147, 147)
                                    .addComponent(jLabel11)
                                    .addGap(42, 42, 42)
                                    .addComponent(lblInjTime))
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jLabel8)
                                    .addGap(18, 18, 18)
                                    .addComponent(lblIC))
                                .addComponent(btnSelectPeople)
                                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 606, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblTitle)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnComplete)
                        .addGap(90, 90, 90))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(38, 38, 38)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblTitle)
                    .addComponent(btnComplete))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblStatus)
                    .addComponent(jLabel10)
                    .addComponent(lblInjTime)
                    .addComponent(jLabel11))
                .addGap(20, 20, 20)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 5, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(lblName))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblIC)
                    .addComponent(jLabel8))
                .addGap(17, 17, 17)
                .addComponent(btnSelectPeople)
                .addGap(18, 18, 18)
                .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, 13, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(3, 3, 3)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jLabel6))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(dateAppointmentDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cboCentre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(btnCheckOccupants)
                .addGap(12, 12, 12)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel7)
                            .addComponent(lblCurOccu))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel9)
                            .addComponent(lblAdvOccu)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel12)
                        .addGap(7, 7, 7)
                        .addComponent(cboTime, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(33, 33, 33)
                .addComponent(jSeparator4, javax.swing.GroupLayout.PREFERRED_SIZE, 13, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel13)
                    .addComponent(lblVacName)
                    .addComponent(lblVacExp)
                    .addComponent(jLabel14))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSelectVaccine)
                    .addComponent(btnRemoveVac))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 35, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel15)
                    .addComponent(lblPersonnel)
                    .addComponent(btnSave))
                .addGap(32, 32, 32))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnSelectPeopleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSelectPeopleActionPerformed
        // TODO add your handling code here:
        SelectPeopleForm dialog = new SelectPeopleForm(this, true); 
    }//GEN-LAST:event_btnSelectPeopleActionPerformed

    private void btnCheckOccupantsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCheckOccupantsActionPerformed
        if(dateAppointmentDate.getDate() == null){
            JOptionPane.showMessageDialog(null, 
                    "Date and timeslot are required for this function", "", 
                    JOptionPane.WARNING_MESSAGE);
        }else{
            int centreID = cboCentre.getSelectedIndex() + 1;
            Date date = dateAppointmentDate.getDate();
            String time = cboTime.getSelectedItem().toString();
            
            int curOccupants = Appointment.getOccupantsAmount(centreID, date, time);
            int centreOccupants = Centre.searchByID(centreID).getOccupantCapacity();
                    
            lblCurOccu.setText(String.valueOf(curOccupants));
            lblAdvOccu.setText(String.valueOf(centreOccupants));
        }
    }//GEN-LAST:event_btnCheckOccupantsActionPerformed

    private void btnSelectVaccineActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSelectVaccineActionPerformed
        // TODO add your handling code here:
        int centreID = cboCentre.getSelectedIndex() + 1;
        if(centreID != 0){
           SelectVaccineForm dialog = new SelectVaccineForm(this, true, centreID); 
        }
    }//GEN-LAST:event_btnSelectVaccineActionPerformed

    private void btnRemoveVacActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRemoveVacActionPerformed
        // TODO add your handling code here:
        app.setVaccineID(0);
        lblVacName.setText("---");
        lblVacExp.setText("---");
        
        cboCentre.setEnabled(true);
    }//GEN-LAST:event_btnRemoveVacActionPerformed

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
        // TODO add your handling code here:
        if(inputValid()){
            
            app.setAppointmentID(appointmentID);
            app.setCentreID(cboCentre.getSelectedIndex() + 1);
            app.setTime(cboTime.getSelectedItem().toString());
            app.setDate(dateAppointmentDate.getDate());
                            
            if(mode == AccessMode.NEW){
                app.setPersonnelID(UserSession.getCurrentUserID());

                app.addAppointment();
                
            }else if(mode == AccessMode.EDIT){
               app.updateAppointment();
            }
            
            this.dispose();
        }
    }//GEN-LAST:event_btnSaveActionPerformed

    private void btnCompleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCompleteActionPerformed
        Date appDate = dateAppointmentDate.getDate();
        
        if(dateHasPassed(appDate)){
            InjectionTimeForm dialog = new InjectionTimeForm(this, true);
 
        }else{
           JOptionPane.showMessageDialog(null, 
                    "Cannot mark as complete. Appointment date have not yet passed", "", 
                    JOptionPane.WARNING_MESSAGE); 
        }               
       
    }//GEN-LAST:event_btnCompleteActionPerformed

    private boolean dateHasPassed(Date date){
        if(UIUtils.isToday(date) || date.before(new Date())){
            return true;
        }
        
        return false;
    }
    
    public void completeInjection(LocalTime injectionTime){
        //Set status of apppointment
        app.setStatus("Completed");
        lblStatus.setText("Completed");
        int vacID = app.getVaccineID();
        
        //Add vaccination record
        VaccinationRecord vacRecord = new VaccinationRecord(injectionTime, appointmentID);
        app.setVacRecord(vacRecord);
        lblInjTime.setText(UIUtils.formatTime(vacRecord.getInjectionTime()));
        
        //Reduce the balance of the vaccine used
        Vaccine vaccine = Vaccine.searchVaccine(vacID);
        vaccine.setBalance(vaccine.getBalance() - 1);
        
        //Persist data
        vaccine.updateVaccine();
        app.updateAppointment();
        
        //Stop user from editing anything
        enterViewMode();
    }
    
    private boolean inputValid(){
        boolean result = true;
        String message = "";
        boolean isPending = app.getStatus().equals("Pending");
        
        Date appDate = dateAppointmentDate.getDate();
      
        if(appDate == null){
            result = false;
            message = "Invalid date";
        }else{
            Date today = new Date();
            if(!UIUtils.isToday(appDate) && appDate.before(today) && isPending){
               result = false;
                 message = "Date already passed"; 
            }
        }
        
        if(app.getPeopleID() == 0){
            result = false;
            message = "Please choose a people";
        }
        
        if(app.getVaccineID() == 0){
            result = false;
            message = "Please choose a vaccine";
        }
            //If Vaccine has been chosen 
            //Status == Pending
            //check the exp date
            
        if(app.getVaccineID() != 0 && appDate != null && isPending){
            Vaccine vac = Vaccine.searchVaccine(app.getVaccineID());
            Date expDate = vac.getExpDate();
            
            if(appDate.after(expDate) || UIUtils.isEqual(expDate, appDate)){
                result = false;
                message = "Vaccine will be expired on the appointed day";
            }
        }
        
        
        if(!result){
            JOptionPane.showMessageDialog(null, 
                    message, "Invalid Input", 
                    JOptionPane.WARNING_MESSAGE);
        }
        
        
        
        return result;
           
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AppointmentDetailPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AppointmentDetailPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AppointmentDetailPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AppointmentDetailPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCheckOccupants;
    private javax.swing.JButton btnComplete;
    private javax.swing.JButton btnRemoveVac;
    private javax.swing.JButton btnSave;
    private javax.swing.JButton btnSelectPeople;
    private javax.swing.JButton btnSelectVaccine;
    private javax.swing.JComboBox<String> cboCentre;
    private javax.swing.JComboBox<String> cboTime;
    private com.toedter.calendar.JDateChooser dateAppointmentDate;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JSeparator jSeparator4;
    private javax.swing.JLabel lblAdvOccu;
    private javax.swing.JLabel lblCurOccu;
    private javax.swing.JLabel lblIC;
    private javax.swing.JLabel lblInjTime;
    private javax.swing.JLabel lblName;
    private javax.swing.JLabel lblPersonnel;
    private javax.swing.JLabel lblStatus;
    private javax.swing.JLabel lblTitle;
    private javax.swing.JLabel lblVacExp;
    private javax.swing.JLabel lblVacName;
    // End of variables declaration//GEN-END:variables
}
