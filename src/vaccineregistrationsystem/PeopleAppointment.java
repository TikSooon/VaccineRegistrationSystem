/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package vaccineregistrationsystem;

import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import vaccineregistrationsystem.VaccineRegistrationSystem.AccessMode;

/**
 *
 * @author DELL
 */
public class PeopleAppointment extends javax.swing.JFrame {

    /**
     * Creates new form ManageAppointment
     */
    private ArrayList<Appointment> appointmentList;
    private ArrayList<People> peopleList;
    private String searchIC;
    private int peopleid;
    
    public PeopleAppointment(int peopleid) {
        initComponents();
        this.setVisible(true);
        this.peopleid = peopleid;
        displayData();
        btnCert.setVisible(false);
    }
    
     public PeopleAppointment() {
        
    }
    
    private void displayData(){
        DefaultTableModel model = (DefaultTableModel) tableAppointment.getModel();
       
        appointmentList = Appointment.getAllAppointments();
        model.setRowCount(0);
        int count = 0;
        int val = 0;
        for(int i = 0; i < appointmentList.size() ; i++){
            
            Appointment appointment = appointmentList.get(i);
            int peopleID = appointment.getPeopleID();
            People p = People.getPeopleByID(peopleID);
            
            if (peopleID == peopleid){
            String ID = String.valueOf(appointment.getAppointmentID());
            String date = UIUtils.formatDate(appointment.getDate());
            String time = appointment.getTime();
            String ic = p.getNric();
            String name = p.getName();
            int centreID = appointment.getCentreID();
            String centreName = Centre.searchByID(centreID).getCentreName();
            String status = appointment.getStatus();
            if (appointment.getStatus().equals("Pending")){
                val++;
            }
            if (appointment.getStatus().equals("Completed")){
                count++;
            }
            model.addRow(new Object[]{ID,date,time,name,ic,centreName, status});
            }
        }
        tableAppointment.setModel(model);
        if (val >= 1) {
            btnAdd.setEnabled(false);
        } else {
            btnAdd.setEnabled(true);
        }
        if (count == 2) {
            btnAdd.setVisible(false);
            btnCert.setVisible(true);
        }
        
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tableAppointment = new javax.swing.JTable();
        btnView = new javax.swing.JButton();
        btnAdd = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        btnCert = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Manage Appointment");
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowActivated(java.awt.event.WindowEvent evt) {
                formWindowActivated(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Segoe UI Black", 0, 18)); // NOI18N
        jLabel1.setText("View Appointments");

        tableAppointment.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "Appointment ID", "Date", "Time", "Name", "IC/ Passport No", "Centre", "Status"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tableAppointment);

        btnView.setBackground(new java.awt.Color(93, 93, 90));
        btnView.setForeground(new java.awt.Color(255, 255, 255));
        btnView.setText("View Appointment");
        btnView.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViewActionPerformed(evt);
            }
        });

        btnAdd.setBackground(new java.awt.Color(93, 93, 90));
        btnAdd.setForeground(new java.awt.Color(255, 255, 255));
        btnAdd.setText("Make Appointment");
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });

        jLabel2.setText("Upcoming Apointments");

        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/vaccineregistrationsystem/images/appointment-icon.png"))); // NOI18N

        btnCert.setBackground(new java.awt.Color(93, 93, 90));
        btnCert.setForeground(new java.awt.Color(255, 255, 255));
        btnCert.setText("View Certificate");
        btnCert.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCertActionPerformed(evt);
            }
        });

        jLabel4.setText("Note: You can only make an appointment if there is no appointment in \"pending\" status.");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(54, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                            .addComponent(btnCert)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(18, 18, 18)
                            .addComponent(btnView, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 744, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel2)
                                .addComponent(jLabel3))
                            .addGap(18, 18, 18)
                            .addComponent(jLabel1))))
                .addContainerGap(51, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addComponent(jLabel3))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(33, 33, 33)
                        .addComponent(jLabel1)))
                .addGap(18, 18, 18)
                .addComponent(jLabel2)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 194, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(23, 23, 23)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnView)
                    .addComponent(btnAdd)
                    .addComponent(btnCert))
                .addContainerGap(20, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed

       int appointmentID = Appointment.getNextID();
       PeopleAppointmentDetail page = new PeopleAppointmentDetail(AccessMode.NEW, appointmentID, peopleid);

    }//GEN-LAST:event_btnAddActionPerformed

    private void btnViewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViewActionPerformed
       int appointmentID = getSelectedAppointmentID();
       if(appointmentID == -1){
           return ;
       }
       PeopleAppointmentDetail page = new PeopleAppointmentDetail(AccessMode.VIEW, appointmentID, peopleid);
      
    }//GEN-LAST:event_btnViewActionPerformed

    private void formWindowActivated(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowActivated
        // TODO add your handling code here:
        displayData();
    }//GEN-LAST:event_formWindowActivated

    private void btnCertActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCertActionPerformed
        // TODO add your handling code here:
        ArrayList ids = new ArrayList();
        String nric = tableAppointment.getModel().getValueAt(0, 4).toString();
        for (int row = 0; row < tableAppointment.getRowCount(); row ++){
            String complete = tableAppointment.getModel().getValueAt(row, 6).toString();
            int id = Integer.parseInt(tableAppointment.getModel().getValueAt(row, 0).toString());
            if (complete.equals("Completed")){
                ids.add(id);
            }
        }
            int app1 = (int) ids.get(0);
            int app2 = (int) ids.get(1);
        String status = Appointment.getVaccinationStatus(nric);
        if (status.equals("Fully Vaccinated")){
            VacCert x = new VacCert(peopleid,app1,app2);
        } else{
            JOptionPane.showMessageDialog(null, "Certificate will be auto generated after 14 days upon completion of your second appointment", "Information", JOptionPane.OK_OPTION);
        }
    }//GEN-LAST:event_btnCertActionPerformed
    
    
    private int getSelectedAppointmentID(){
        int column = 0;
        int row = tableAppointment.getSelectedRow();
        
        if(row != -1){
            String value = tableAppointment.getModel().getValueAt(row, column).toString();
            return Integer.parseInt(value);
        }else{
            JOptionPane.showMessageDialog(null, "Please select an appointment first");
        }
        return -1;
        
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PeopleAppointment.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PeopleAppointment.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PeopleAppointment.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PeopleAppointment.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new PeopleAppointment().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnCert;
    private javax.swing.JButton btnView;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tableAppointment;
    // End of variables declaration//GEN-END:variables
}
