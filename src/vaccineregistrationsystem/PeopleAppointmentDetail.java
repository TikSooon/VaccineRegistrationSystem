/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package vaccineregistrationsystem;

import com.toedter.calendar.JTextFieldDateEditor;
import java.awt.Color;
import java.time.LocalTime;
import java.util.ArrayList;
import java.util.Date;
import java.util.HashSet;
import java.util.Vector;
import javax.swing.ComboBoxModel;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.UIManager;
import vaccineregistrationsystem.VaccineRegistrationSystem.AccessMode;

/**
 *
 * @author DELL
 */
public class PeopleAppointmentDetail extends javax.swing.JFrame {

    /**
     * Creates new form AppointmentDetailPage
     */
    private Appointment app = new Appointment();
    private AccessMode mode;
    private int appointmentID;
    private int peopleid;
    private ArrayList<Vaccine> vaccineList;
    private ArrayList<Centre> centreList;

        
    public PeopleAppointmentDetail(AccessMode mode, int appointmentID, int peopleid) {
        initComponents();
        this.setVisible(true);
        
        this.mode = mode;
        this.appointmentID = appointmentID;
        this.peopleid = peopleid;
        this.setPeopleID(peopleid);
        cboVac.removeAllItems();
        cboCentre.setEnabled(false);
       
        if(mode != AccessMode.NEW){
            displayData();
            btnCancel.setVisible(true);
        }else{
            app = new Appointment();
            app.setStatus("Pending");
            btnCancel.setVisible(false);
        }
        
        if(mode == AccessMode.VIEW){
            enterViewMode();
        }
      
    }
    
    
    private void displayData(){
        app = Appointment.searchbyAppointmentID(appointmentID);
        
        setPeopleID(app.getPeopleID());
        setVaccine(app.getVaccineID());
        
        Centre centre = Centre.searchByID(app.getCentreID());
        cboCentre.addItem(centre.getCentreName());
        cboTime.setSelectedItem(app.getTime());
        dateAppointmentDate.setDate(app.getDate());
        
        String status = app.getStatus();
        lblStatus.setText(status);
        
        if(app.getPersonnelID() != 0){
            int personnelId = app.getPersonnelID();
            String personnelName = Personnel.getPersonnelbyID(personnelId).getName();
            lblPersonnel.setText(personnelName);
        }
        
        if(status.equals("Completed")){
            VaccinationRecord vacRecord = app.getVacRecord();
            lblInjTime.setText(UIUtils.formatTime(vacRecord.getInjectionTime()));
        }
    }
    
    private void enterViewMode(){
        cboCentre.setEnabled(false);
        cboTime.setEnabled(false);
        dateAppointmentDate.setEnabled(false);
        cboVac.setEnabled(false);
        btnConfirm.setVisible(false);
        ((JTextFieldDateEditor)dateAppointmentDate.getDateEditor())
                .setDisabledTextColor(Color.darkGray);
        UIManager.put( "ComboBox.disabledForeground", Color.BLACK );
        
        btnSave.setVisible(false);
        String x =lblStatus.getText();
        if (x.equals("Cancelled") || x.equals("Completed")){
            btnCancel.setVisible(false);
        }
    }

    public void setPeopleID(int peopleID){
        app.setPeopleID(peopleID);
        People people = People.getPeopleByID(peopleID);
        
        lblName.setText(people.getName());
        lblIC.setText(people.getNric());
        
    }
    
    public void setVaccine(int vaccineID){
        app.setVaccineID(vaccineID);
        Vaccine vaccine = Vaccine.searchVaccine(vaccineID);
        
        cboVac.addItem(vaccine.getVaccineName());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblTitle = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        lblName = new javax.swing.JLabel();
        lblIC = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        dateAppointmentDate = new com.toedter.calendar.JDateChooser();
        cboTime = new javax.swing.JComboBox<>();
        jLabel6 = new javax.swing.JLabel();
        cboCentre = new javax.swing.JComboBox<>();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        btnSave = new javax.swing.JButton();
        lblStatus = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        lblInjTime = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        lblPersonnel = new javax.swing.JLabel();
        jSeparator2 = new javax.swing.JSeparator();
        jSeparator3 = new javax.swing.JSeparator();
        jSeparator4 = new javax.swing.JSeparator();
        btnCancel = new javax.swing.JButton();
        cboVac = new javax.swing.JComboBox<>();
        jSeparator5 = new javax.swing.JSeparator();
        btnConfirm = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Appointment Detail");
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosed(java.awt.event.WindowEvent evt) {
                formWindowClosed(evt);
            }
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        lblTitle.setFont(new java.awt.Font("Segoe UI Black", 0, 18)); // NOI18N
        lblTitle.setText("Appointment Detail");

        jLabel2.setText("People");

        jLabel3.setText("Vaccine");

        jLabel4.setText("Date");

        jLabel5.setText("Name:");

        lblName.setText("---");

        lblIC.setText("---");

        jLabel8.setText("IC/Passport No:");

        cboTime.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "10 am", "1 pm", "4 pm" }));

        jLabel6.setText("Centre");

        cboCentre.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "National Stadium Bukit Jalil", "KL General Hospital", "Titiwangsa Stadium" }));
        cboCentre.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cboCentreItemStateChanged(evt);
            }
        });
        cboCentre.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                cboCentreMouseClicked(evt);
            }
        });
        cboCentre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboCentreActionPerformed(evt);
            }
        });
        cboCentre.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                cboCentrePropertyChange(evt);
            }
        });

        jLabel12.setText("Timeslot");

        jLabel13.setText("Name:");

        btnSave.setBackground(new java.awt.Color(93, 93, 90));
        btnSave.setForeground(new java.awt.Color(255, 255, 255));
        btnSave.setText("Save");
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });

        lblStatus.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        lblStatus.setText("---");

        jLabel10.setText("Status:");

        lblInjTime.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        lblInjTime.setText("---");

        jLabel11.setText("Time Received Injection:");

        jLabel15.setText("Appointed By:");

        lblPersonnel.setText("---");

        jSeparator2.setForeground(new java.awt.Color(0, 0, 0));

        jSeparator3.setForeground(new java.awt.Color(0, 0, 0));

        jSeparator4.setForeground(new java.awt.Color(0, 0, 0));

        btnCancel.setBackground(new java.awt.Color(93, 93, 90));
        btnCancel.setForeground(new java.awt.Color(255, 255, 255));
        btnCancel.setText("Cancel Appointment");
        btnCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelActionPerformed(evt);
            }
        });

        cboVac.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "10 am", "1 pm", "4 pm" }));

        jSeparator5.setForeground(new java.awt.Color(0, 0, 0));

        btnConfirm.setBackground(new java.awt.Color(93, 93, 90));
        btnConfirm.setForeground(new java.awt.Color(255, 255, 255));
        btnConfirm.setText("Confirm Date and Time");
        btnConfirm.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnConfirmActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btnCancel)
                                .addGap(18, 18, 18)
                                .addComponent(btnSave))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, 606, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jLabel10)
                                    .addGap(18, 18, 18)
                                    .addComponent(lblStatus)
                                    .addGap(147, 147, 147)
                                    .addComponent(jLabel11)
                                    .addGap(42, 42, 42)
                                    .addComponent(lblInjTime))
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jLabel8)
                                    .addGap(18, 18, 18)
                                    .addComponent(lblIC))
                                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 606, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jLabel4)
                                    .addComponent(dateAppointmentDate, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 222, Short.MAX_VALUE))
                                .addComponent(btnConfirm)
                                .addComponent(jSeparator4, javax.swing.GroupLayout.PREFERRED_SIZE, 606, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel6)
                                .addComponent(cboCentre, javax.swing.GroupLayout.PREFERRED_SIZE, 291, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jSeparator5, javax.swing.GroupLayout.PREFERRED_SIZE, 606, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel3)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jLabel13)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(cboVac, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(0, 73, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel5)
                                .addGap(18, 18, 18)
                                .addComponent(lblName)
                                .addGap(253, 253, 253)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(cboTime, javax.swing.GroupLayout.PREFERRED_SIZE, 222, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel12)))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel15)
                                .addGap(18, 18, 18)
                                .addComponent(lblPersonnel))
                            .addComponent(jLabel2)
                            .addComponent(lblTitle))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(38, 38, 38)
                .addComponent(lblTitle)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblStatus)
                    .addComponent(jLabel10)
                    .addComponent(lblInjTime)
                    .addComponent(jLabel11))
                .addGap(20, 20, 20)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 5, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(lblName))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblIC)
                    .addComponent(jLabel8))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, 13, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(dateAppointmentDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel12)
                        .addGap(7, 7, 7)
                        .addComponent(cboTime, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addComponent(btnConfirm)
                .addGap(18, 18, 18)
                .addComponent(jSeparator5, javax.swing.GroupLayout.PREFERRED_SIZE, 13, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(4, 4, 4)
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cboCentre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jSeparator4, javax.swing.GroupLayout.PREFERRED_SIZE, 13, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel13)
                    .addComponent(cboVac, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 43, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel15)
                    .addComponent(lblPersonnel)
                    .addComponent(btnSave)
                    .addComponent(btnCancel))
                .addGap(32, 32, 32))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelActionPerformed
        // TODO add your handling code here:
        if (JOptionPane.showConfirmDialog(null, "Are you sure to cancel this appointment?","Warning",JOptionPane.YES_NO_OPTION) == 0){
            CancelApp();
            JOptionPane.showMessageDialog(null, "Appointment has been cancelled!","Success",JOptionPane.INFORMATION_MESSAGE);
            this.dispose();
            PeopleAppointment a =  new PeopleAppointment();
    }
    }//GEN-LAST:event_btnCancelActionPerformed

    private void cboCentreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboCentreActionPerformed
        // TODO add your handling code here:
        
    }//GEN-LAST:event_cboCentreActionPerformed

    private void cboCentreMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cboCentreMouseClicked
        // TODO add your handling code here:
        
        findVac();
    }//GEN-LAST:event_cboCentreMouseClicked

    private void cboCentrePropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_cboCentrePropertyChange
        // TODO add your handling code here:
        
    }//GEN-LAST:event_cboCentrePropertyChange

    private void cboCentreItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cboCentreItemStateChanged
        // TODO add your handling code here:
        
    }//GEN-LAST:event_cboCentreItemStateChanged

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
        // TODO add your handling code here:
        String x = (String) cboVac.getSelectedItem();
        String[] y = x.split("-");
        
        int z = Integer.parseInt(y[0]);
        this.setVaccine(z);
        this.setPeopleID(peopleid);
        
        System.out.println(peopleid);
        if(inputValid()){

            app.setAppointmentID(appointmentID);
            app.setCentreID(cboCentre.getSelectedIndex() + 1);
            app.setTime(cboTime.getSelectedItem().toString());
            app.setDate(dateAppointmentDate.getDate());

            if(mode == AccessMode.NEW){
                app.addAppointment();
            }else if(mode == AccessMode.EDIT){
                app.updateAppointment();
            }
            this.dispose();
        }
    }//GEN-LAST:event_btnSaveActionPerformed

    private void btnConfirmActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnConfirmActionPerformed
        // TODO add your handling code here:
        Date appDate = dateAppointmentDate.getDate();
        if(appDate == null){
            JOptionPane.showMessageDialog(null, "Please input date.");
        }else{
            Date today = new Date();
            if(!UIUtils.isToday(appDate) && appDate.before(today)){
                JOptionPane.showMessageDialog(null, "Please input a valid date after today.");
            } else{
                if (JOptionPane.showConfirmDialog(null, "Confirm on Date and Time?") == 0){
                dateAppointmentDate.setEnabled(false);
                cboTime.setEnabled(false);
                btnConfirm.setEnabled(false);
                findCentre();
                cboCentre.setEnabled(true);
                }
            }
        }
    }//GEN-LAST:event_btnConfirmActionPerformed

    private void formWindowClosed(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosed
        // TODO add your handling code here:
       
    }//GEN-LAST:event_formWindowClosed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        // TODO add your handling code here:
    
    }//GEN-LAST:event_formWindowClosing

    private boolean dateHasPassed(Date date){
        if(UIUtils.isToday(date) || date.before(new Date())){
            return true;
        }
        
        return false;
    }
    private void findVac(){
        cboVac.removeAllItems();
        Date appDate = dateAppointmentDate.getDate();
        int centreID = cboCentre.getSelectedIndex() + 1;
        DefaultComboBoxModel x = new DefaultComboBoxModel();
           ArrayList<Vaccine> vaccineList = Vaccine.searchAvailableVaccinebyCentreID(centreID);
           
            for(int i = 0; i < vaccineList.size() ; i++){
                Vaccine vac = vaccineList.get(i);
                String vacid = String.valueOf(vac.getVaccineID());
                String name = vac.getVaccineName();
                Date expDate = vac.getExpDate();
                
                if(appDate.after(expDate) || UIUtils.isEqual(expDate, appDate)){
                } else{
                    x.addElement(vacid+"-"+name);
                }
                
        }
            cboVac.setModel(x);
    }
    
    private void CancelApp(){
        app.setStatus("Cancelled");
        app.updateAppointment();
    }
    
    private void findCentre(){
        //find available centres (got capacity)
        cboCentre.removeAllItems();
        DefaultComboBoxModel model = new DefaultComboBoxModel();
        centreList = Centre.getAllCentres();
        for (int i = 0; i < centreList.size(); i++){
            Centre centre = centreList.get(i);
            int centreID = centre.getCentreID();
            String name = centre.getCentreName();
            Date date = dateAppointmentDate.getDate();
            String time = cboTime.getSelectedItem().toString();
            
            int curOccupants = Appointment.getOccupantsAmount(centreID, date, time);
            int centreOccupants = Centre.searchByID(centreID).getOccupantCapacity();
            
            if (centreOccupants - curOccupants >=1 ){
                model.addElement(name);
            }
        }
        cboCentre.setModel(model);
    }
    
    private boolean inputValid(){
        boolean result = true;
        String message = "";
        boolean isPending = app.getStatus().equals("Pending");
        
        Date appDate = dateAppointmentDate.getDate();
      
        if(appDate == null){
            result = false;
            message = "Invalid date";
        }else{
            Date today = new Date();
            if(!UIUtils.isToday(appDate) && appDate.before(today) && isPending){
               result = false;
                 message = "Date already passed"; 
            }
        }
        
        if(app.getVaccineID() == 0){
            result = false;
            message = "Please choose a vaccine";
        }
            //If Vaccine has been chosen 
            //Status == Pending
            //check the exp date
            
        if(app.getVaccineID() != 0 && appDate != null && isPending){
            Vaccine vac = Vaccine.searchVaccine(app.getVaccineID());
            Date expDate = vac.getExpDate();
            
            if(appDate.after(expDate) || UIUtils.isEqual(expDate, appDate)){
                result = false;
                message = "Vaccine will be expired on the appointed day";
            }
        }
        
        if(!result){
            JOptionPane.showMessageDialog(null, 
                    message, "", 
                    JOptionPane.WARNING_MESSAGE);
        }
        
        return result;
           
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PeopleAppointmentDetail.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PeopleAppointmentDetail.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PeopleAppointmentDetail.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PeopleAppointmentDetail.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCancel;
    private javax.swing.JButton btnConfirm;
    private javax.swing.JButton btnSave;
    private javax.swing.JComboBox<String> cboCentre;
    private javax.swing.JComboBox<String> cboTime;
    private javax.swing.JComboBox<String> cboVac;
    private com.toedter.calendar.JDateChooser dateAppointmentDate;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JSeparator jSeparator4;
    private javax.swing.JSeparator jSeparator5;
    private javax.swing.JLabel lblIC;
    private javax.swing.JLabel lblInjTime;
    private javax.swing.JLabel lblName;
    private javax.swing.JLabel lblPersonnel;
    private javax.swing.JLabel lblStatus;
    private javax.swing.JLabel lblTitle;
    // End of variables declaration//GEN-END:variables
}
